package com.yaDsp.util;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

import org.joda.time.LocalDate;
import org.joda.time.format.DateTimeFormat;
 
public class DateFormatterUtil {
  
	public Date parse(String text, Locale locale) throws ParseException {
		Date date = null;
		LocalDate localDate = null;
		try {
			localDate = LocalDate.parse(text, DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss"));
			date = localDate.toDate();
		} catch (Exception e) {
			localDate = LocalDate.parse(text, DateTimeFormat.forPattern("yyyy-MM-dd"));
			date = localDate.toDate();
		}
		return date;
	}

	/**
	 * 
	 * @return
	 */
	public static int getDayOfWeek()
	{
		Calendar cal = Calendar.getInstance();  
	       // cal.setTime(date);  
	        cal.setFirstDayOfWeek(Calendar.MONDAY);  
	        int tmp = cal.get(Calendar.DAY_OF_WEEK) - 1;  
	        if (0 == tmp) {  
	            tmp = 7;  
	        } 
	        return tmp;
	}
	
	public static int getDayOfWeek(Date date){   
	    
	        Calendar cal = Calendar.getInstance();  
	        cal.setTime(date);  
	        cal.setFirstDayOfWeek(Calendar.MONDAY);  
	        int tmp = cal.get(Calendar.DAY_OF_WEEK) - 1;  
	        if (0 == tmp) {  
	            tmp = 7;  
	        }  
	        return tmp;  
	    
	}
	
	/**
	 * 
	 * @return yyyyMMdd
	 */
	public static int getDate()
	{
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
		return Integer.parseInt(sdf.format(new Date()));
	}
	
	public static int getDate(Date date)
	{
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
		return Integer.parseInt(sdf.format(date));
	}
	
	public static String formatDate(Date date,String format){
		SimpleDateFormat sdf = new SimpleDateFormat(format);
		return sdf.format(date);
	}
}
